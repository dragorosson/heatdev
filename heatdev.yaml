heat_template_version: 2014-10-16

description: Your own personal Heat development environment!

parameters:

  keystone_admin_user:
    type: string
    default: orchestration-dev
    description: admin user to verify auth tokens

  keystone_admin_pass:
    type: string
    hidden: true
    description: admin password to verify auth tokens

  target_datacenter:
    type: string
    description: Which datacenter should be used to deploy resources
    default: IAD
    constraints:
    - allowed_values: [ IAD, DFW, ORD, HKG, SYD, LON ]

  fusion_github_user:
    type: string
    description: github user for Fusion
    default: fusiontesting

  fusion_github_pass:
    type: string
    hidden: true
    description: password for fusion github user
    default: ''

  fusion_template_user:
    type: string
    description: cloud files user for RAX catalog in Fusion
    default: heatdev.templates

  fusion_template_tenant_id:
    type: string
    description: tenant ID for fusion cloud files user
    default: 836933

  fusion_template_pass:
    type: string
    hidden: true
    description: password for fusion cloud files user
    default: ''

resources:
  server_password:
    type: OS::Heat::RandomString

  mysql_password:
    type: OS::Heat::RandomString

  heat_mysql_password:
    type: OS::Heat::RandomString

  rabbit_password:
    type: OS::Heat::RandomString

  auth_encryption_key:
    type: OS::Heat::RandomString

  devbox:
    type: OS::Nova::Server
    properties:
      image: Ubuntu 14.04 LTS (Trusty Tahr) (PVHVM) (Orchestration)
      flavor:  4GB Standard Instance
      admin_pass: { get_attr: [ server_password, value ] }
      name: { get_param: "OS::stack_name" }
      config_drive: true
      software_config_transport: POLL_TEMP_URL
      user_data_format: SOFTWARE_CONFIG
      metadata:
        rax-heat: { get_param: "OS::stack_id" }
        stack-name: { get_param: "OS::stack_name" }

  bootstrap_heat:
    type: OS::Heat::SoftwareConfig
    properties:
      group: ansible
      inputs:
      - name: AUTH_ENC_KEY
      - name: HEAT_DB_PASS
      - name: KS_ADMIN
      - name: KS_ADMIN_PASS
      - name: MYSQL_PASS
      - name: RABBIT_PASS
      - name: STACK_NAME
      - name: TARGET_DC
      - name: GITHUB_USER
      - name: GITHUB_PASS
      - name: TEMPLATE_USER
      - name: TEMPLATE_TENANT_ID
      - name: TEMPLATE_PASS
      config: |
        ---
        - name: Bootstrap Heat
          connection: local
          hosts: localhost
          tasks:
          - name: Pull heatdev repository
            git:
              repo: https://github.com/dragorosson/heatdev.git
              dest: /root/heatdev
              version: master
          - name: Create settings.yml
            template:
              src: /root/heatdev/settings.yml.j2
              dest: /root/heatdev/settings.yml
          - name: Run Bootstrap
            command: ansible-playbook -i localhost, /root/heatdev/bootstrap.yml

  deploy_bootstrap:
    type: OS::Heat::SoftwareDeployment
    properties:
      signal_transport: TEMP_URL_SIGNAL
      config: { get_resource: bootstrap_heat }
      server: { get_resource: devbox }
      input_values:
        AUTH_ENC_KEY:  { get_attr: [ auth_encryption_key, value ] }
        HEAT_DB_PASS:  { get_attr: [ heat_mysql_password, value ] }
        KS_ADMIN:      { get_param: keystone_admin_user }
        KS_ADMIN_PASS: { get_param: keystone_admin_pass }
        MYSQL_PASS:    { get_attr: [ mysql_password, value ] }
        RABBIT_PASS:   { get_attr: [ rabbit_password, value ] }
        STACK_NAME:    { get_param: "OS::stack_name" }
        TARGET_DC:     { get_param: target_datacenter }
        GITHUB_USER:   { get_param: fusion_github_user }
        GITHUB_PASS:   { get_param: fusion_github_pass }
        TEMPLATE_USER: { get_param: fusion_template_user }
        TEMPLATE_TENANT_ID: { get_param: fusion_template_tenant_id }
        TEMPLATE_PASS: { get_param: fusion_template_pass }

outputs:
  server_password:
    value: { get_attr: [ server_password, value ] }
    description: server password

  mysql_password:
    value: { get_attr: [ mysql_password, value ] }
    description: mysql password

  rabbit_password:
    value: { get_attr: [ rabbit_password, value ] }
    description: rabbit password

  server_ip:
    value: { get_attr: [ devbox, accessIPv4 ] }
    description: server ip address
